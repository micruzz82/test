#
# Author : Haystack Networks Ltd 
#        : www.haystacknetworks.com
#
# Copyright 2017 Haystack Networks Ltd, UK
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright notice,
#      this list of conditions and the following disclaimer in the documentation
#      and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

- name: Customer Tenant Deployment - Basic Tenant\BD\VRF\VID\EPG\AEP-Assignment
  hosts: all
  connection: local
  gather_facts: no


  vars:
    aci_login: &aci_login
      hostname: '{{ inventory_hostname }}'
      username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
      password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
      validate_certs: no

  tasks:

  - name: Create Tenant {{ tenant_name }}
    aci_tenant:
      <<: *aci_login
      tenant: '{{ tenant_name }}'
      description: 'Customer {{tenant_name|upper}}'
      state: present
    delegate_to: localhost

  - name: Create VRF {{ vrf_name }}
    aci_vrf:
      <<: *aci_login
      tenant: '{{ tenant_name }}'
      vrf_name: '{{ vrf_name }}'
      state: present
    delegate_to: localhost

  - name: Create Bridge Domain {{ bd_name }}
    aci_bd:
      <<: *aci_login
      tenant: '{{ tenant_name }}'
      vrf: '{{ vrf_name }}'
      bd: '{{ bd_name }}'
      limit_ip_learn: yes             # BD only learns IP host addrs where they match a configured subnet
      enable_routing: no              # inital deployment L2 only
      l2_unknown_unicast: flood       # for L2 with l3 gw outside fabric - chg to default (proxy) when converting to L3 
      arp_flooding: yes               # enabled for l2_unknown_unicast to be set to flood
      state: present
    delegate_to: localhost

  - name: Create Application Profile {{ app_profile }}
    aci_ap:
      <<: *aci_login
      tenant: '{{ tenant_name }}'
      app_profile: '{{ app_profile }}'
    delegate_to: localhost

  - name: Create EPG {{ epg_name }}
    aci_epg:
      <<: *aci_login
      tenant: '{{ tenant_name }}'
      app_profile: '{{ app_profile }}'
      epg: '{{ epg_name }}'                         # BD: item.1.name
      bridge_domain: '{{ bd_name }}' 
      state: present
    delegate_to: localhost

